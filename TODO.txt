JIT kernels needed:

-------------------------------------------------------------------------
add to ewise family:
-------------------------------------------------------------------------

* GB_kroner

-------------------------------------------------------------------------
new subref family:
-------------------------------------------------------------------------

* GB_bitmap_subref and GB_subref_phase2
    C = A(I,J)
    no operator
    no typecast
    no mask
    no scalar case
    2 matrices: C and A
    index lists: I and J
    has symbolic and C_iso cases, but these do not need the JIT

-------------------------------------------------------------------------
add to apply family:
-------------------------------------------------------------------------

* GB_unjumble for user-defined data types (GB_qsort_1b)
    no operator (use identity op, no typecast)
    one matrix A
    single data type; just move data
    no typecasting

* GB_all_entries_are_iso and GB_expand_iso
    no operator (use identity op, no typecast)
    no typecast
    one matrix, one data type: A

* GB_convert_bitmap_worker
    no operator (use identity op, xtype and ztype can differ)
    one matrix A
    single data type, just move data
    no typecasting, but could add it (see GB_extractTuples)

-------------------------------------------------------------------------
new sort family:
-------------------------------------------------------------------------

* GB_sort: sort for user defined types and comparator operators
    one matrix A
    binary op (not index binary op), for x < y as z=f(x,y), z is bool,
        with xtype == ytype
    single data type A:  move data, and typecast A to to x and y
    typecast A to xtype/ytype if needed

-------------------------------------------------------------------------
JIT: possible
-------------------------------------------------------------------------

* GB_AxB_saxpy3_flopcount
    3 matrices: M, A, B
    bool: Mask_comp
    no operators or data types

* GB_AxB_saxpy3_slice_balanced
    3 matrices: M, A, B
    bool: Mask_comp
    int AxB_method
    no operators or data types

* GB_ewise_slice
    3 matrices: M, A, B
    bool Ch_is_Mh

* GB_assign_zombie5
* GB_assign_zombie4
* GB_assign_zombie3
    use assign family

-------------------------------------------------------------------------
could use factory cases for these methods:
-------------------------------------------------------------------------

* GB_extract_vector_list
* GB_select_positional_phase1
* GB_select_positional_phase2
* GB_emult_02_phase1

